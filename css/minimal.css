/* The following styles are essential to the slider's functionality, and never need to be changed */
	.plusslider { overflow: hidden; position: relative; }
	.plusslider-container { position: relative; }
	.plusslider .child { float: left; }
	.plustype-fader .child { display: none; position: absolute; left: 0; top: 0; } /* only applies to fader type (not slider) */
	.plustype-fader .current { z-index: 5; } /* only applies to fader type (not slider) */


/* The following styles are essential to the slider's functionality, but might need to be changed by you */

	/* Slides that are just <img> tags should *not* have an explicit width set in CSS
	 * (the js code will figure out the width from the image itself). If you set it here in CSS
	 * the slider will still work okay, but the slide effect will not look as cool.
	 *
	 * All other slides (<div>, <li>, <a>... anything other than <img>) MUST have
	 * an explicit width declared in CSS -- even though they may be dynamic
	 * (different from each other or responsive/fluid).
	 * 
	 * TODO: WHAT ABOUT RESPONSIVE IMAGES THAT DON'T HAVE W/H ATTRIBUTES SET? HOW DOES JS CODE KNOW ITS WIDTH?
	 *
	 * NOTE that while non-<img> slides need explicit widths set in CSS,
	 * the slide container (the one wrapper around *all* the slides)
	 * does *not* need an explicit width (or height) to be set.
	 * If you do, it will cause problems for slides of different sizes or responsive slides.
	 *
	 * TODO: DOES THIS STUFF ONLY APPLY TO THE SLIDER TYPE (NOT FADER)?
	 * TODO: WHY ONLY WIDTH? WHAT ABOUT HEIGHT??
	 */
	.plusslider div.child { /* if we didn't have any <img> slides, we could just use ".plusslider .child", but we don't want the width to apply to <img>'s so restrict this to the <div> */
		width: 550px;
	}
	/* TODO: MAKE THE EXAMPLE LESS CONFUSING! DON'T COMBINE <IMG> AND <DIV> EXAMPLES IN THE SAME PAGE... MAKE DIFFERENT ONES!
	
	/* No-javascript fallback...
	 * You must either add the .slider class to each slider CONTAINER,
	 * OR change the ".slider" selectors below to something that will
	 * identify your slider container.
	 */
		.slider > * { display: none; }
		.slider > .first { display: block; } /* If you don't care about IE6/7, you could just use ".slider > :first-child" as a selector */
		.slider .child { display: block; } /* Counter no-js fallback for cloned elements. Necessary for infiniteSlide (DON'T CHANGE THIS) */



/* The following styles are not essential for slider functionality. They are specific to the example content.
   Note that the fading effect does not work correctly with non-image content unless that content area
   has a solid background (either a background image or a background-color, but not transparent). */
   
	* { margin: 0; padding: 0; } /* Hard reset */
   
	#slider .slide1 { padding-left: 40px; padding-right: 40px; margin-left: 0; margin-right: 0; } 
	#slider .slide1 { height: 210px; padding-top: 20px; padding-bottom: 20px; margin-top: 0; margin-bottom: 0; } 

	.slide1 { background: url(../images/image1.jpg) no-repeat left top; height: 210px; padding: 20px 40px; }
	.slide1 h2 { color: #fff; font-size: 20px; margin: 0 0 20px 0; text-align: left; }
	.slide1 p { border-left: 3px solid #fff; color: #fff; padding: 0 0 0 10px; }

	.quote, .quote2, .quote3 { height: 170px; padding: 20px 0; width: 580px; font: 24px Georgia, serif; text-align: center; width: 100%; position: relative; }
	.quote { background: #f1f1f1; color: #333; }
	.quote2 { background: #333; color: #f1f1f1; }
	.quote3 { background: #666; color: #f1f1f1; }

	.plusslider a img { border: none; } /* Prevent blue borders in IE (not only does it look ugly, but it messes up spacing which breaks the "slider" type */

	/* Pagination controls styles... */
	.plusslider {
		padding: 60px 0; /* Create some space above and below the slides for the pagination controls */
	}
	.plusslider-pagination { position: absolute; left: 0; bottom: 0; }
	.plusslider-pagination li { float: left; list-style: none; margin-left: 5px; }
